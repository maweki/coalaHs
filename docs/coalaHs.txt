-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Glue Code for Coala Bears written in Haskell
--   
--   Please see README.md
@package coalaHs
@version 0.1.0.0

module Coala.Input
type Settings = Map String String
emptySettings :: Map k a

module Coala
data Filename
emptyFilename :: Filename
newFilename :: String -> Filename
coala :: String -> (ByteString -> Maybe a) -> (a -> [Result]) -> IO ()
coalaIO :: String -> (ByteString -> Maybe a) -> (a -> IO [Result]) -> IO ()
data Result
data Severity
data Line
data Column
data Affect
data CodeRef
codeRef :: Filename -> (Line, Maybe Column) -> (Line, Maybe Column) -> Affect
encodeResults :: String -> [Result] -> Value
instance GHC.Show.Show Coala.Result
instance GHC.Classes.Eq Coala.Result
instance GHC.Show.Show Coala.Affect
instance GHC.Classes.Eq Coala.Affect
instance GHC.Show.Show Coala.CodeRef
instance GHC.Classes.Eq Coala.CodeRef
instance GHC.Classes.Eq Coala.Column
instance GHC.Show.Show Coala.Column
instance GHC.Classes.Eq Coala.Line
instance GHC.Show.Show Coala.Line
instance GHC.Classes.Eq Coala.Severity
instance GHC.Show.Show Coala.Severity
instance GHC.Show.Show Coala.Filename
instance GHC.Classes.Eq Coala.Filename
instance Data.Aeson.Types.Class.ToJSON Coala.Severity
instance Data.Aeson.Types.Class.ToJSON Coala.Filename
instance Data.Aeson.Types.Class.ToJSON Coala.Line
instance Data.Aeson.Types.Class.ToJSON Coala.Column
instance Data.Aeson.Types.Class.ToJSON Coala.CodeRef
instance Data.Aeson.Types.Class.ToJSON Coala.Affect

module Coala.Input.SingleFile
data SingleFile
singleFile :: ByteString -> Maybe SingleFile

-- | Source filename
filename :: SingleFile -> Filename

-- | Lines of source file
file :: SingleFile -> [Text]

-- | Settings
settings :: SingleFile -> Settings
instance GHC.Show.Show Coala.Input.SingleFile.SingleFile
instance GHC.Classes.Eq Coala.Input.SingleFile.SingleFile
